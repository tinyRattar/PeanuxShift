-- title:  MadPhysicist
-- author: PEANUX Studio
-- desc:   I don't know. Maybe a Zelda-like game.
-- script: lua

-- predefine set
function set(ls)
	local s={}
	for _,l in ipairs(ls) do s[l]=true end
	function s:contains(e)
		return s[e]==true
	end
	function s:add(e)
	 s[e]=true
	end
	function s:remove(e)
	 s[e]=nil
	end
	return s
end
MAP_COLLIDE=set({16})

-- class
function damage(value, elem):
	dmg={
		value=value,
		elem=elem or 0
	}

function entity(x,y,w,h)
	ety = {
		x=x,
		y=y,
		w=w,
		h=h
		--collide = true
	}
	function ety:move(dx,dy)
		local fakeT = {x=self.x+dx,y=self.y+dy,w=self.w,h=self.h}
		if(mapCollisionFree(fakeT))then
			if(entityCollisionFree(fakeT))then
				self.x = self.x+dx
				self.y = self.y+dy
		  end
		end
	end

	return ety
end
-- _player
player = entity(40,30,8,16)
player.hp = 100
player.attack = 5
player.state = 0
player.ti1 = 0
function player:attack()
	if(self.state==0) then
		self.state=1
		self.ti1=30
		-- todo: attack check
		hitList = boxOverlapCast({x=self.x+8,y=self.y,w=8,h=16})
		for i=1,#hitList do
			local tar=hitList[i]
			if(tar~=self) then
				-- todo: tar.onHit(damage(self.attack))
				-- todo: element attack
			end
		end
	end
end
function player:control()
	-- controller
	if(self.state==0) then
		if btn(0) then player:move(0,-1) end
		if btn(1) then player:move(0,1) end
		if btn(2) then player:move(-1,0) end
		if btn(3) then player:move(1,0) end
	end

	if btn(4) then player:attack() end
end
function player:update()
	player:control()
	if(self.ti1>0) then
		self.ti1 = self.ti1 - 1
		if(self.ti1<=0) then self.state=0 end
	end
end
function player:draw()
	if(self.state==0) then
		spr(256+t//20%3,self.x,self.y,9,1,0,0,1,2)
	elseif(self.state==1) then
		spr(261-self.ti1//15 * 2,self.x,self.y,9,1,0,0,2,2)
		--trace(261-self.ti1//16%2 * 2)
	end
end

-- _mob
function mob(x,y,w,h,hp)
	local m = entity(x,y,w,h)
	m.hp=hp
	m.state=0
	--m.sleep=true
	function m:onHit(dmg)
		m.hp=m.hp-dmg.value
		-- todo: element attack
		-- todo: death check
	end
	function m:death()
		-- todo: do something like score change
		-- or maybe dead mob is a mob as well?
		table.remove(mobManager,self)
	end

	return m
end

function slime(x,y)
	-- todo: init slime with mob()
	local s = mob(x,y,8,8,15)
	
	function slime:startAttack()
		slime.state=0
	end

	function slime:update()
		-- todo: Alert Range
		-- todo: slime:update()
	end
	
	function slime:draw()
		-- todo: slime:draw()
	end
end

-- tool
function boxOverlapCast(box)
	-- box={x,y,w,h}
	finded = {}
	-- todo: search entities in box area
	return finded
end

function mapCollisionFree(ety)
	local l=ety.x//8
	local r=(ety.x+ety.w-1)//8
	local u=ety.y//8
	local d=(ety.y+ety.h-1)//8
	for i=l,r do
		for j=u,d do
			local tileId = mget(iMapManager.offx+i,iMapManager.offy+j)
			--trace(MAP_COLLIDE)
			--trace(tileId)
			if(MAP_COLLIDE:contains(tileId))then return false end
		end
	end
	return true
end

function entityCollisionFree(ety)
	-- check ety and all entities collision
	return true
end

iMapManager = {offx=0,offy=0}
-- function iMapManager:update() end
function iMapManager:draw()
	map(0+self.offx,0+self.offy,30,14,0,0,0,1,0)
	-- todo map redraw
end

function loadLevel(levelId)
	local listOffx = {0,30}
	local listOffy = {0,14}
	iMapManager.offx = listOffx
	iMapManager.offy = listOffy
	-- todo initMap
end

--playerManager={player}
mobManager={}
--npcManager={}
envManager={}

t=0

mainManager = {{player},mobManager,envManager}
drawManager = {{iMapManager},envManager,{player},mobManager}

function TIC()
	-- update
	for i=1,#mainManager do
		for j=1,#mainManager[i] do
			mainManager[i][j]:update()
		end
	end
  -- draw
  cls(0)
  for i=1,#drawManager do
    for j=1,#drawManager[i] do
			drawManager[i][j]:draw()
		end
	end

	t=t+1
	--trace("test"..a)
end

-- <TILES>
-- 001:fffffff7fffffff7fffffff7fffffff7fffffff7fffffff7fffffff777777777
-- 016:3333333333777733373773733773377337733773373773733377773333333333
-- </TILES>

-- <SPRITES>
-- 000:99999999999999999888888998eeee8998e0e0f998eeeef9988888f9998888f9
-- 001:99999999999999999888888998eeee8998e0e0f998eeeef9988888f9998888f9
-- 002:99999999999999999888888998eeee8998e0e0f998eeeef9988888f9998888f9
-- 003:99999999999999999888888998eeee8998e0e08998eeee899888888999888889
-- 004:999999999999999999999999f999999999f99999999f9999f99999999f99f999
-- 005:99999999999999999888888998eeee8998e0e08998eeee899888888999888889
-- 006:9999999999999999999999999999999999999999999999999999999999999999
-- 016:998888f999888777998888e99988889999899899998998999999999999999999
-- 017:998888f999888777998888e99988889999899899999998999999999999999999
-- 018:998888f999888777998888e99988889999899899998999999999999999999999
-- 019:99888899998888899988889e9988889999899899998998999999999999999999
-- 020:9999f999799999997fffff997999999999999999999999999999999999999999
-- 021:99888899998888899988889e9988889999899899998998999999999999999999
-- 022:99999999799999997fffff997999999999999999999999999999999999999999
-- </SPRITES>

-- <MAP>
-- 002:000001010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 003:000001101010101001010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 004:000001101010101010101010101001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 005:000001101010101010101010101001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 006:000001101010101001010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 007:000001010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </MAP>

-- <WAVES>
-- 000:00000000ffffffff00000000ffffffff
-- 001:0123456789abcdeffedcba9876543210
-- 002:0123456789abcdef0123456789abcdef
-- </WAVES>

-- <SFX>
-- 000:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000304000000000
-- </SFX>

-- <PALETTE>
-- 000:140c1c44243430346d4e4a4e854c30346524d04648757161597dced27d2c8595a16daa2cd2aa996dc2cadad45edeeed6
-- </PALETTE>
